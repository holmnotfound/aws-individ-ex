var d=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var c=Object.prototype.hasOwnProperty;var y=(t,e)=>{for(var a in e)d(t,a,{get:e[a],enumerable:!0})},x=(t,e,a,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of l(e))!c.call(t,s)&&s!==a&&d(t,s,{get:()=>e[s],enumerable:!(r=g(e,s))||r.enumerable});return t};var S=t=>x(d({},"__esModule",{value:!0}),t);var f={};y(f,{handler:()=>b});module.exports=S(f);var n=require("@aws-sdk/client-dynamodb"),i=require("@aws-sdk/util-dynamodb"),o=new n.DynamoDBClient({region:"eu-north-1"}),b=async t=>{try{let{id:e,newText:a}=JSON.parse(t.body);if(!e||!a)return{statusCode:400,body:JSON.stringify({message:"id och ny text kr\xE4vs"})};let r="Message",s=e,u=new n.GetItemCommand({TableName:"message-api",Key:{pk:{S:r},sk:{S:s}}});if(!(await o.send(u)).Item)return{statusCode:404,body:JSON.stringify({message:"Meddelandet finns inte"})};let m=new n.UpdateItemCommand({TableName:"message-api",Key:{pk:{S:r},sk:{S:s}},UpdateExpression:"SET #text = :newText",ExpressionAttributeNames:{"#text":"text"},ExpressionAttributeValues:{":newText":{S:a}},ReturnValues:"ALL_NEW"}),p=await o.send(m);return{statusCode:200,body:JSON.stringify({message:"Meddelandet updaterades",updatedItem:(0,i.unmarshall)(p.Attributes)})}}catch(e){return console.error("Fel vid uppdatering av meddelandet.",e),{statusCode:500,body:JSON.stringify({message:"Ett fel uppstod vid uppdatering",error:e.message})}}};0&&(module.exports={handler});
//# sourceMappingURL=index.js.map
