{
  "version": 3,
  "sources": ["../../../../functions/ChangeMessage/index.js"],
  "sourcesContent": ["import { DynamoDBClient, UpdateItemCommand, GetItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { unmarshall } from \"@aws-sdk/util-dynamodb\";\n\nconst client = new DynamoDBClient({ region: \"eu-north-1\" });\n\nexport const handler = async (event) =>{\n    try{\n        const {id, newText} = JSON.parse(event.body)\n\n        if (!id || !newText){\n            return{\n                statusCode: 400,\n                body: JSON.stringify({\n                    message: \"id och ny text kr\u00E4vs\"\n                })\n            }\n        }\n\n        const pk = \"Message\";\n        const sk = id;\n\n        const getMessage = new GetItemCommand({\n            TableName: \"message-api\",\n            Key: {\n                pk: {S: pk},\n                sk: {S: sk}\n            }\n        });\n\n        const getResult = await client.send(getMessage);\n\n        if(!getResult.Item){\n            return{\n                statusCode: 404,\n                body: JSON.stringify({\n                    message: \"Meddelandet finns inte\"\n                })\n            };\n        }\n\n        const updateMessage = new UpdateItemCommand({\n            TableName: \"message-api\",\n            Key: {\n                pk: {S: pk},\n                sk: {S: sk}\n            },\n            UpdateExpression: \"SET #text = :newText\",\n            ExpressionAttributeNames:{\n                \"#text\": \"text\"\n            },\n            ExpressionAttributeValues:{\n                \":newText\": {S: newText}\n            },\n            ReturnValues: \"ALL_NEW\"\n        });\n\n        const updatedResult = await client.send(updateMessage);\n\n        return{\n            statusCode: 200,\n            body: JSON.stringify({\n                message: \"Meddelandet updaterades\",\n                updatedItem: unmarshall(updatedResult.Attributes)\n            })\n        };\n\n    }catch(error){\n        console.error(\"Fel vid uppdatering av meddelandet.\", error);\n\n        return{\n            statusCode: 500,\n            body: JSON.stringify({\n                message: \"Ett fel uppstod vid uppdatering\",\n                error: error.message\n            })\n        }\n    }\n}"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAkE,oCAClEC,EAA2B,kCAErBC,EAAS,IAAI,iBAAe,CAAE,OAAQ,YAAa,CAAC,EAE7CJ,EAAU,MAAOK,GAAS,CACnC,GAAG,CACC,GAAM,CAAC,GAAAC,EAAI,QAAAC,CAAO,EAAI,KAAK,MAAMF,EAAM,IAAI,EAE3C,GAAI,CAACC,GAAM,CAACC,EACR,MAAM,CACF,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,yBACb,CAAC,CACL,EAGJ,IAAMC,EAAK,UACLC,EAAKH,EAELI,EAAa,IAAI,iBAAe,CAClC,UAAW,cACX,IAAK,CACD,GAAI,CAAC,EAAGF,CAAE,EACV,GAAI,CAAC,EAAGC,CAAE,CACd,CACJ,CAAC,EAID,GAAG,EAFe,MAAML,EAAO,KAAKM,CAAU,GAEhC,KACV,MAAM,CACF,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,wBACb,CAAC,CACL,EAGJ,IAAMC,EAAgB,IAAI,oBAAkB,CACxC,UAAW,cACX,IAAK,CACD,GAAI,CAAC,EAAGH,CAAE,EACV,GAAI,CAAC,EAAGC,CAAE,CACd,EACA,iBAAkB,uBAClB,yBAAyB,CACrB,QAAS,MACb,EACA,0BAA0B,CACtB,WAAY,CAAC,EAAGF,CAAO,CAC3B,EACA,aAAc,SAClB,CAAC,EAEKK,EAAgB,MAAMR,EAAO,KAAKO,CAAa,EAErD,MAAM,CACF,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,0BACT,eAAa,cAAWC,EAAc,UAAU,CACpD,CAAC,CACL,CAEJ,OAAOC,EAAM,CACT,eAAQ,MAAM,sCAAuCA,CAAK,EAEpD,CACF,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,kCACT,MAAOA,EAAM,OACjB,CAAC,CACL,CACJ,CACJ",
  "names": ["index_exports", "__export", "handler", "__toCommonJS", "import_client_dynamodb", "import_util_dynamodb", "client", "event", "id", "newText", "pk", "sk", "getMessage", "updateMessage", "updatedResult", "error"]
}
